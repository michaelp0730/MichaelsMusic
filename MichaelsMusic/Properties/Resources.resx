<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="McNaught_VDC_Description" xml:space="preserve">
    <value>&lt;p&gt;The McNaught Vintage Double Cut is a Mahogany solid body carved top guitar with a Mahogany 'SET-THRU' neck and 'All-Access' heel. It features a flame Maple bound Indian Rosewood fingerboard with 12\" radius, 22 frets, 24 3/4\" compensated scale length, Mother Of Pearl 'Offset Block' inlays, Tone Pros Tune-O-Matic bridge, Sperzel locking tuners, Wagner Dual humbuckers, 1 11/16\" nut, matching wood cavity covers, and a standard form-fitted case.&lt;/p&gt;
&lt;p&gt;Available custom upgrades include:&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;Diamond Carved Flame Top&lt;/li&gt;
    &lt;li&gt;Diamond Carved Quilt Top&lt;/li&gt;
    &lt;li&gt;Exotic Wood Tops&lt;/li&gt;
    &lt;li&gt;Wood Binding on Body&lt;/li&gt;
    &lt;li&gt;Wood Binding on Headstock&lt;/li&gt;
    &lt;li&gt;Black Limba Body and Neck&lt;/li&gt;
    &lt;li&gt;Kingwood Fingerboard&lt;/li&gt;
    &lt;li&gt;Ebony Fingerboard&lt;/li&gt;
    &lt;li&gt;Birdseye Maple Fingerboard&lt;/li&gt;
    &lt;li&gt;Brazilian Fingerboard&lt;/li&gt;
    &lt;li&gt;Maple Neck&lt;/li&gt;
    &lt;li&gt;Tone Chambers&lt;/li&gt;
    &lt;li&gt;Hipshot Tremolo&lt;/li&gt;
    &lt;li&gt;Floyd Rose Tremolo&lt;/li&gt;
    &lt;li&gt;Piezo System&lt;/li&gt;
    &lt;li&gt;String Thru&lt;/li&gt;
    &lt;li&gt;Flame Maple Pickup Rings&lt;/li&gt;
    &lt;li&gt;Direct Mount Pickups&lt;/li&gt;
    &lt;li&gt;24 Fret&lt;/li&gt;
    &lt;li&gt;25 ½\" Scale&lt;/li&gt;
    &lt;li&gt;25\" Scale&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;List price is $4,800 while street price is $3,600.&lt;/p&gt;</value>
  </data>
  <data name="PRS_Custom24_Description" xml:space="preserve">
    <value>&lt;p&gt;The Custom 24 is the quintessential PRS guitar. This iconic instrument was the first model that Paul Reed Smith brought to the public at PRS Guitars’ first Winter NAMM show in 1985 and has been a top seller ever since. Played by internationally touring artists, gigging musicians, and aspiring players, the Custom 24 features PRS’s patented tremolo system and PRS 85/15 treble and bass pickups with volume and tone controls and a 5-way blade switch. 85/15 pickups were personally designed by Paul Reed Smith for PRS’s 30th Anniversary. They offer remarkable clarity and extended high and low end.&lt;/p&gt;
&lt;p&gt;The Custom 24 is the original PRS. Since its introduction, it has offered a unique tonal option for serious players and defined PRS tone and playability.&lt;/p&gt;
&lt;p&gt;Guitarists looking for additional options, colors, and enhanced features can order a Custom 24 Artist Package.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pickup Switching Positions:&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Position One: Bridge humbucker&lt;br /&gt;
Position Two: Bridge humbucker with neck singlecoil, in parallel&lt;br /&gt;
Position Three: Bridge and neck humbuckers&lt;br /&gt;
Position Four: Neck singlecoil with bridge singlecoil, in parallel&lt;br /&gt;
Position Five: Neck humbucker&lt;/p&gt;
&lt;p&gt;Mahogany body and neck.&lt;/p&gt;</value>
  </data>
</root>